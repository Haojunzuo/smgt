<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.wbz.system.mapper.ScoreMapper">

    <resultMap id="ScoreResult" type="Score">
        <result property="id" jdbcType="BIGINT" column="id"/>
        <result property="semester" jdbcType="VARCHAR" column="semester"/>
        <result property="courseNo" jdbcType="VARCHAR" column="courseNo"/>
        <result property="courseName" jdbcType="VARCHAR" column="courseName"/>
        <result property="courseAttr" jdbcType="VARCHAR" column="courseAttr"/>
        <result property="studentNo" jdbcType="VARCHAR" column="studentNo"/>
        <result property="studentName" jdbcType="VARCHAR" column="studentName"/>
        <result property="score" jdbcType="FLOAT" column="score"/>
    </resultMap>


    <sql id="selectScoreVo">
        select id,
               semester,
               courseNo,
               courseName,
               courseAttr,
               studentNo,
               studentName,
               score
        from score
    </sql>

    <select id="selectScoreList" parameterType="Score" resultMap="ScoreResult">
        <include refid="selectScoreVo"/>
        <where>
            <if test="id != null  and id != ''">and id = #{id}</if>
            <if test="semester != null  and semester != ''">and semester like concat('%',#{semester},'%')</if>
            <if test="courseNo != null  and courseNo != ''">and courseNo like concat('%',#{courseNo},'%')</if>
            <if test="courseName != null  and courseName != ''">and courseName like concat('%',#{courseName},'%')</if>
            <if test="courseAttr != null  and courseAttr != ''">and courseAttr like concat('%',#{courseAttr},'%')</if>
            <if test="studentNo != null  and studentNo != ''">and studentNo like concat('%',#{studentNo},'%')</if>
            <if test="studentName != null  and studentName != ''">and studentName like concat('%',#{studentName},'%')</if>
            <if test="score != null and score != ''">and score  = #{score}</if>
        </where>
    </select>

    <insert id="insertScore" parameterType="Score">
        insert into score
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">id,</if>
            <if test="semester != null">semester,</if>
            <if test="courseNo != null">courseNo,</if>
            <if test="courseName != null">courseName,</if>
            <if test="courseAttr != null">courseAttr,</if>
            <if test="studentNo != null">studentNo,</if>
            <if test="studentName != null">studentName,</if>
            <if test="score != null">score,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">#{id},</if>
            <if test="semester != null">#{semester},</if>
            <if test="courseNo != null">#{courseNo},</if>
            <if test="courseName != null">#{courseName},</if>
            <if test="courseAttr != null">#{courseAttr},</if>
            <if test="studentNo != null">#{studentNo},</if>
            <if test="studentName != null">#{studentName},</if>
            <if test="score != null">#{score},</if>
        </trim>
    </insert>

    <update id="updateScore" parameterType="Score">
        update score
        <trim prefix="SET" suffixOverrides=",">
            <if test="id != null">id = #{id},</if>
            <if test="semester != null">semester = #{semester},</if>
            <if test="courseNo != null">courseNo = #{courseNo},</if>
            <if test="courseName != null">courseName = #{courseName},</if>
            <if test="courseAttr != null">courseAttr = #{courseAttr},</if>
            <if test="studentNo != null">studentNo = #{studentNo},</if>
            <if test="studentName != null">studentName = #{studentName},</if>
            <if test="score != null">score = #{score},</if>
        </trim>
        where id = #{id}
    </update>

    <update id="updateScoreByscs" parameterType="Score">
        update score set score=#{score} where semester=#{semester} and courseNo=#{courseNo} and studentNo=#{studentNo}
    </update>


    <select id="getScore" parameterType="Long" resultMap="ScoreResult">
        <include refid="selectScoreVo"/>
        where id = #{id}
    </select>

    <delete id="delScore" parameterType="String">
        delete from score where id in
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

    <insert id="insertScoreByBatch" parameterType="java.util.List">
        insert into score (id, semester, courseNo, courseName, courseAttr, studentNo, studentName, score)
        values
        <foreach collection="list" item="item" index="index" separator=",">
            (#{item.id,jdbcType=BIGINT},#{item.semester,jdbcType=VARCHAR},#{item.courseNo,jdbcType=VARCHAR},#{item.courseName,jdbcType=VARCHAR},
             #{item.courseAttr,jdbcType=VARCHAR},#{item.studentNo,jdbcType=VARCHAR},#{item.studentName,jdbcType=VARCHAR},#{item.score,jdbcType=FLOAT})
        </foreach>
    </insert>

</mapper>
